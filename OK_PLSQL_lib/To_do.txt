In PKG_ETL_UTILS:
MERGE  INTO OK.TST_OK t 
USING 
(
  SELECT /*+ all_rows */
      CASE WHEN s.etl$src_indicator IS NULL THEN t.OWNER ELSE s.OWNER END OWNER,
      CASE WHEN s.etl$src_indicator IS NULL THEN t.OBJECT_NAME ELSE s.OBJECT_NAME END OBJECT_NAME,
      CASE WHEN s.etl$src_indicator IS NULL THEN t.OBJECT_TYPE ELSE s.OBJECT_TYPE END OBJECT_TYPE,
      CASE WHEN s.etl$src_indicator IS NULL THEN t.LAST_DDL_TIME ELSE s.LAST_DDL_TIME END LAST_DDL_TIME, 
      t.ROWID row_id, s.etl$src_indicator
  FROM 
  (
    SELECT 1 etl$src_indicator, s.* FROM SYS.ALL_OBJECTS s
    WHERE owner = 'OK' AND object_type = 'TABLE'
  ) s
  FULL JOIN OK.TST_OK t
    ON t.OWNER=s.OWNER AND t.OBJECT_NAME=s.OBJECT_NAME 
  WHERE 1=1
  AND (LNNVL(t.LAST_DDL_TIME=s.LAST_DDL_TIME))
) s 
ON (t.ROWID = s.row_id)
WHEN MATCHED THEN UPDATE SET t.LAST_DDL_TIME=s.LAST_DDL_TIME,t.OBJECT_TYPE=s.OBJECT_TYPE
WHERE s.etl$src_indicator IS NOT NULL -- TODO: add this condition
DELETE WHERE s.etl$src_indicator IS NULL
WHEN NOT MATCHED THEN INSERT 
(
  owner,object_name,object_type,last_ddl_time, id, source_system
)
VALUES 
(
  s.OWNER,s.OBJECT_NAME,s.OBJECT_TYPE,s.LAST_DDL_TIME, seq_tst_ok.nextval, 'PCS'
)
WHERE 1=1
AND NOT (s.etl$src_indicator IS NULL);

In PKG_DATA_REFRESH:
Line 181 - missing ";"
generate -> p_generate
Gather error stats for DRF process
SIGNAL -> STOP